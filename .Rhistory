relevant_events_forcalc$enoughdata <- sapply(relevant_events_forcalc, enoughdata, relevant_events_treatment, relevant_events_inspected, days_window)
sapply(relevant_events_forcalc, cat)
apply(relevant_events_forcalc, 1, enoughdata, relevant_events_treatment, relevant_events_inspected, days_window)
enoughdata <- function(relevant_event_forcalc, relevant_events_treatment, relevant_events_inspected, days_window){
datebefore <- relevant_event_forcalc$date-days_window
dateafter <- relevant_event_forcalc$date+days_window-1
enoughdata <- TRUE
#Is the time window in the time period when we have data?
if(datebefore >= as.Date("2015-01-01") & dateafter < as.Date("2016-03-15")){
enoughdata <- FALSE
}
#Is there only one event for the treatment product in the given store within the time window?
if(nrow(relevant_events_treatment[relevant_events_treatment$storeID==relevant_event_forcalc$storeID &
relevant_events_treatment$date > datebefore &
relevant_events_treatment$date <= dateafter, ]) > 1){
enoughdata <- FALSE
}
#Is there any event for the inspected product in the given store within the time window?
if(nrow(relevant_events_treatment[relevant_events_inspected$storeID==relevant_event_forcalc$storeID &
relevant_events_inspected$date > datebefore &
relevant_events_inspected$date <= dateafter, ]) > 0){
enoughdata <- FALSE
}
return(enoughdata)
}
relevant_events_forcalc$enoughdata <- sapply(relevant_events_forcalc, enoughdata, relevant_events_treatment, relevant_events_inspected, days_window)
enoughdata <- function(relevant_event_forcalc, relevant_events_treatment, relevant_events_inspected, days_window){
datebefore <- relevant_event_forcalc$date-days_window
dateafter <- relevant_event_forcalc$date+days_window-1
enoughdata <- TRUE
#Is the time window in the time period when we have data?
if(datebefore >= as.Date("2015-01-01") & dateafter < as.Date("2016-03-15")){
enoughdata <- FALSE
}
#Is there only one event for the treatment product in the given store within the time window?
if(nrow(relevant_events_treatment[relevant_events_treatment$storeID==relevant_event_forcalc$storeID &
relevant_events_treatment$date > datebefore &
relevant_events_treatment$date <= dateafter, ]) > 1){
enoughdata <- FALSE
}
#Is there any event for the inspected product in the given store within the time window?
if(nrow(relevant_events_treatment[relevant_events_inspected$storeID==relevant_event_forcalc$storeID &
relevant_events_inspected$date > datebefore &
relevant_events_inspected$date <= dateafter, ]) > 0){
enoughdata <- FALSE
}
return(enoughdata)
}
Q
enoughdata <- function(relevant_event_forcalc, relevant_events_treatment, relevant_events_inspected, days_window){
datebefore <- relevant_event_forcalc$date-days_window
dateafter <- relevant_event_forcalc$date+days_window-1
enoughdata <- TRUE
#Is the time window in the time period when we have data?
if(datebefore >= as.Date("2015-01-01") & dateafter < as.Date("2016-03-15")){
enoughdata <- FALSE
}
#Is there only one event for the treatment product in the given store within the time window?
if(nrow(relevant_events_treatment[relevant_events_treatment$storeID==relevant_event_forcalc$storeID &
relevant_events_treatment$date > datebefore &
relevant_events_treatment$date <= dateafter, ]) > 1){
enoughdata <- FALSE
}
#Is there any event for the inspected product in the given store within the time window?
if(nrow(relevant_events_treatment[relevant_events_inspected$storeID==relevant_event_forcalc$storeID &
relevant_events_inspected$date > datebefore &
relevant_events_inspected$date <= dateafter, ]) > 0){
enoughdata <- FALSE
}
return(enoughdata)
}
sapply(relevant_events_forcalc, enoughdata, relevant_events_treatment, relevant_events_inspected, days_window)
apply(relevant_events_forcalc, 1, enoughdata, relevant_events_treatment, relevant_events_inspected, days_window)
relevant_event_forcalc <-relevant_events_forcalc[1,]
enoughdata(relevant_event_forcalc, relevant_events_treatment, relevant_events_inspected, days_window)
enoughdata(relevant_events_forcalc[4,], relevant_events_treatment, relevant_events_inspected, days_window)
enoughdata(relevant_events_forcalc[44,], relevant_events_treatment, relevant_events_inspected, days_window)
enoughdata(relevant_events_forcalc[56,], relevant_events_treatment, relevant_events_inspected, days_window)
View(did1a)
relevant_events_forcalc$enoughdata <- apply(relevant_events_forcalc, 1, function(relevant_event_forcalc) enoughdata(relevant_event_forcalc, relevant_events_treatment, relevant_events_inspected, days_window))
apply(relevant_events_forcalc, 1, function(relevant_event_forcalc) cat(relevant_event_forcalc))
cat(days_window, "\n")
apply(relevant_events_forcalc, 1, function(relevant_event_forcalc) cat(relevant_event_forcalc, "\n"))
sapply(relevant_events_forcalc, function(relevant_event_forcalc) cat(relevant_event_forcalc, "\n"))
apply(relevant_events_forcalc, 1, function(x) enoughdata(x, relevant_events_treatment, relevant_events_inspected, days_window))
enoughdata <- function(relevant_event_forcalc, relevant_events_treatment, relevant_events_inspected, days_window){
datebefore <- relevant_event_forcalc[4]-days_window
dateafter <- relevant_event_forcalc[4]+days_window-1
enoughdata <- TRUE
#Is the time window in the time period when we have data?
if(datebefore >= as.Date("2015-01-01") & dateafter < as.Date("2016-03-15")){
enoughdata <- FALSE
}
#Is there only one event for the treatment product in the given store within the time window?
if(nrow(relevant_events_treatment[relevant_events_treatment$storeID==relevant_event_forcalc[1] &
relevant_events_treatment$date > datebefore &
relevant_events_treatment$date <= dateafter, ]) > 1){
enoughdata <- FALSE
}
#Is there any event for the inspected product in the given store within the time window?
if(nrow(relevant_events_treatment[relevant_events_inspected$storeID==relevant_event_forcalc[1] &
relevant_events_inspected$date > datebefore &
relevant_events_inspected$date <= dateafter, ]) > 0){
enoughdata <- FALSE
}
return(enoughdata)
}
apply(relevant_events_forcalc, 1, function(x) enoughdata(x, relevant_events_treatment, relevant_events_inspected, days_window))
relevant_event_forcalc <-relevant_events_forcalc[1,]
enoughdata(relevant_events_forcalc[56,], relevant_events_treatment, relevant_events_inspected, days_window)
lapply(relevant_events_forcalc, function(x) enoughdata(x, relevant_events_treatment, relevant_events_inspected, days_window))
enoughdata <- function(relevant_event_forcalc, relevant_events_treatment, relevant_events_inspected, days_window){
datebefore <- relevant_event_forcalc$date-days_window
dateafter <- relevant_event_forcalc$date+days_window-1
enoughdata <- TRUE
#Is the time window in the time period when we have data?
if(datebefore >= as.Date("2015-01-01") & dateafter < as.Date("2016-03-15")){
enoughdata <- FALSE
}
#Is there only one event for the treatment product in the given store within the time window?
if(nrow(relevant_events_treatment[relevant_events_treatment$storeID==relevant_event_forcalc$storeID &
relevant_events_treatment$date > datebefore &
relevant_events_treatment$date <= dateafter, ]) > 1){
enoughdata <- FALSE
}
#Is there any event for the inspected product in the given store within the time window?
if(nrow(relevant_events_treatment[relevant_events_inspected$storeID==relevant_event_forcalc$storeID &
relevant_events_inspected$date > datebefore &
relevant_events_inspected$date <= dateafter, ]) > 0){
enoughdata <- FALSE
}
return(enoughdata)
}
lapply(relevant_events_forcalc, function(x) enoughdata(x, relevant_events_treatment, relevant_events_inspected, days_window))
Vectorize(enoughdata)
warnings()
enoughdata_V <- Vectorize(enoughdata, vectorize.args = "relevant_event_forcalc")
enoughdata(relevant_events_forcalc[1:10,], relevant_events_treatment, relevant_events_inspected, days_window)
enoughdata(relevant_event_forcalc, relevant_events_treatment, relevant_events_inspected, days_window)
apply(relevant_events_forcalc, 1, function(x) enoughdata(x, relevant_events_treatment, relevant_events_inspected, days_window))
enoughdata <- function(relevant_event_forcalc, relevant_events_treatment, relevant_events_inspected, days_window){
relevant_event_forcalc <- as.data.frame(relevant_event_forcalc)
datebefore <- relevant_event_forcalc$date-days_window
dateafter <- relevant_event_forcalc$date+days_window-1
enoughdata <- TRUE
#Is the time window in the time period when we have data?
if(datebefore >= as.Date("2015-01-01") & dateafter < as.Date("2016-03-15")){
enoughdata <- FALSE
}
#Is there only one event for the treatment product in the given store within the time window?
if(nrow(relevant_events_treatment[relevant_events_treatment$storeID==relevant_event_forcalc$storeID &
relevant_events_treatment$date > datebefore &
relevant_events_treatment$date <= dateafter, ]) > 1){
enoughdata <- FALSE
}
#Is there any event for the inspected product in the given store within the time window?
if(nrow(relevant_events_treatment[relevant_events_inspected$storeID==relevant_event_forcalc$storeID &
relevant_events_inspected$date > datebefore &
relevant_events_inspected$date <= dateafter, ]) > 0){
enoughdata <- FALSE
}
return(enoughdata)
}
apply(relevant_events_forcalc, 1, function(x) enoughdata(x, relevant_events_treatment, relevant_events_inspected, days_window))
enoughdata <- function(relevant_event_forcalc, relevant_events_treatment, relevant_events_inspected, days_window){
relevant_event_forcalc <- as.data.frame(relevant_event_forcalc)
datebefore <- relevant_event_forcalc$date-days_window
dateafter <- relevant_event_forcalc$date+days_window-1
enoughdata <- TRUE
#Is the time window in the time period when we have data?
if(datebefore >= as.Date("2015-01-01") && dateafter < as.Date("2016-03-15")){
enoughdata <- FALSE
}
#Is there only one event for the treatment product in the given store within the time window?
if(nrow(relevant_events_treatment[relevant_events_treatment$storeID==relevant_event_forcalc$storeID &&
relevant_events_treatment$date > datebefore &&
relevant_events_treatment$date <= dateafter, ]) > 1){
enoughdata <- FALSE
}
#Is there any event for the inspected product in the given store within the time window?
if(nrow(relevant_events_treatment[relevant_events_inspected$storeID==relevant_event_forcalc$storeID &&
relevant_events_inspected$date > datebefore &&
relevant_events_inspected$date <= dateafter, ]) > 0){
enoughdata <- FALSE
}
return(enoughdata)
}
apply(relevant_events_forcalc, 1, function(x) enoughdata(x, relevant_events_treatment, relevant_events_inspected, days_window))
apply(relevant_events_forcalc, 1, function(x) enoughdata(x, relevant_events_treatment, relevant_events_inspected, days_window))
enoughdata <- function(date, storeID, relevant_events_treatment, relevant_events_inspected, days_window){
datebefore <- date-days_window
dateafter <- date+days_window-1
enoughdata <- TRUE
#Is the time window in the time period when we have data?
if(datebefore >= as.Date("2015-01-01") && dateafter < as.Date("2016-03-15")){
enoughdata <- FALSE
}
#Is there only one event for the treatment product in the given store within the time window?
if(nrow(relevant_events_treatment[relevant_events_treatment$storeID==storeID &&
relevant_events_treatment$date > datebefore &&
relevant_events_treatment$date <= dateafter, ]) > 1){
enoughdata <- FALSE
}
#Is there any event for the inspected product in the given store within the time window?
if(nrow(relevant_events_treatment[relevant_events_inspected$storeID==storeID &&
relevant_events_inspected$date > datebefore &&
relevant_events_inspected$date <= dateafter, ]) > 0){
enoughdata <- FALSE
}
return(enoughdata)
}
enoughdata(relevant_events_forcalc$date[5], relevant_events_forcalc$storeID[5], relevant_events_treatment, relevant_events_inspected, days_window)
enoughdata(relevant_events_forcalc$date[9], relevant_events_forcalc$storeID[5], relevant_events_treatment, relevant_events_inspected, days_window)
enoughdata(relevant_events_forcalc$date[9], relevant_events_forcalc$storeID[1234], relevant_events_treatment, relevant_events_inspected, days_window)
enoughdata(relevant_events_forcalc$date[1234], relevant_events_forcalc$storeID[1234], relevant_events_treatment, relevant_events_inspected, days_window)
enoughdata(relevant_events_forcalc$date[234], relevant_events_forcalc$storeID[234], relevant_events_treatment, relevant_events_inspected, days_window)
relevant_events_forcalc[234]
relevant_events_forcalc[234,]
nrow(relevant_events_treatment[relevant_events_treatment$storeID==2316 &&
relevant_events_treatment$date > datebefore &&
relevant_events_treatment$date <= dateafter, ])
enoughdata(relevant_events_forcalc$date[24], relevant_events_forcalc$storeID[24], relevant_events_treatment, relevant_events_inspected, days_window)
apply(relevant_events_forcalc, 1, function(x) enoughdata(x$date, x$storeID, relevant_events_treatment, relevant_events_inspected, days_window))
apply(relevant_events_forcalc, 1, function(x) enoughdata(x['date'], x['storeID'], relevant_events_treatment, relevant_events_inspected, days_window))
enoughdata <- function(date, storeID, relevant_events_treatment, relevant_events_inspected, days_window){
date <- as.Date(date)
datebefore <- date-days_window
dateafter <- date+days_window-1
enoughdata <- TRUE
#Is the time window in the time period when we have data?
if(datebefore >= as.Date("2015-01-01") && dateafter < as.Date("2016-03-15")){
enoughdata <- FALSE
}
#Is there only one event for the treatment product in the given store within the time window?
if(nrow(relevant_events_treatment[relevant_events_treatment$storeID==storeID &&
relevant_events_treatment$date > datebefore &&
relevant_events_treatment$date <= dateafter, ]) > 1){
enoughdata <- FALSE
}
#Is there any event for the inspected product in the given store within the time window?
if(nrow(relevant_events_treatment[relevant_events_inspected$storeID==storeID &&
relevant_events_inspected$date > datebefore &&
relevant_events_inspected$date <= dateafter, ]) > 0){
enoughdata <- FALSE
}
return(enoughdata)
}
apply(relevant_events_forcalc, 1, function(x) enoughdata(x['date'], x['storeID'], relevant_events_treatment, relevant_events_inspected, days_window))
enoughdata <- function(date, storeID, relevant_events_treatment, relevant_events_inspected, days_window){
date <- as.Date(date)
datebefore <- date-days_window
dateafter <- date+days_window-1
enoughdata <- TRUE
#Is the time window in the time period when we have data?
if(datebefore >= as.Date("2015-01-01") && dateafter < as.Date("2016-03-15")){
enoughdata <- FALSE
}
#Is there only one event for the treatment product in the given store within the time window?
if(nrow(relevant_events_treatment[relevant_events_treatment$storeID==storeID &&
relevant_events_treatment$date > datebefore &&
relevant_events_treatment$date <= dateafter, ]) > 1){
enoughdata <- FALSE
}
#Is there any event for the inspected product in the given store within the time window?
if(nrow(relevant_events_treatment[relevant_events_inspected$storeID==storeID &&
relevant_events_inspected$date > datebefore &&
relevant_events_inspected$date <= dateafter, ]) > 0){
enoughdata <- FALSE
}
return(enoughdata)
}
diffindiffnew <- function(treatment_product, inspected_product, days_window, introduction,
events, sales){
#relevant_events_forcalc contains the events from which we potentially want to calculate a salesratio.
#relevant_events_treatment and relevant_events_inspected contain the events
# which are needed to check if the products were available for enough time.
relevant_events_treatment <- events[events$productID==treatment_product &
events[, inspected_product], 1:4]
relevant_events_inspected <- events[events$productID==inspected_product, 1:4]
relevant_events_forcalc <- relevant_events_treatment[relevant_events_treatment$begin==introduction,]
cat("relevant events selected\n")
relevant_events_forcalc$enoughdata <- NA
#Was the inspected product available long enough before and after the event?
relevant_events_forcalc$enoughdata <- apply(relevant_events_forcalc, 1, function(x) enoughdata(x['date'], x['storeID'], relevant_events_treatment, relevant_events_inspected, days_window))
cat("\nRelevant events with enough sales data found.\n")
relevant_events_forcalc <- relevant_events_forcalc[relevant_events_forcalc$enoughdata,]
cat("Number of events:")
cat(nrow(relevant_events_forcalc))
cat("\n")
relevant_events_forcalc$salesafter <- NA
relevant_events_forcalc$salesbefore <- NA
relevant_events_forcalc$salesratio <- NA
relevant_sales <- sales[productID == inspected_product,]
setkeyv(relevant_sales, c("storeID", "date"))
for(i in 1:nrow(relevant_events_forcalc)){
cat(i)
# shift function -> add zero rows to sales function (look at promotion_identification_smoothing.R)
relevant_events_forcalc$salesbefore[i] <- sum(relevant_sales[storeID == relevant_events_forcalc$storeID[i] &
date < relevant_events_forcalc$date[i] &
date >= relevant_events_forcalc$date[i]-days_window, quantity_sold_kg])
relevant_events_forcalc$salesafter[i] <- sum(relevant_sales[storeID == relevant_events_forcalc$storeID[i] &
date >= relevant_events_forcalc$date[i] &
date < relevant_events_forcalc$date[i]+days_window, quantity_sold_kg])
}
cat("\n")
relevant_events_forcalc$salesratio <- relevant_events_forcalc$salesafter/relevant_events_forcalc$salesbefore
relevant_events_forcalc <- relevant_events_forcalc[!is.na(relevant_events_forcalc$salesratio),]
return(relevant_events_forcalc)
}
t1 <- system.time(diffindiffnew("G01F04S12S01", "G01F01S01S01", 30, introduction = TRUE,
events = events, sales = sales))
t1b <- system.time(diffindiffnew("G01F04S12S01", "G01F01S01S01", 16, introduction = TRUE,
events = events, sales = sales))
length(apply(relevant_events_forcalc, 1, function(x) enoughdata(x['date'], x['storeID'], relevant_events_treatment, relevant_events_inspected, days_window)))
diffindiff <- function(treatment_product, inspected_product, days_window, introduction,
events, sales){
#relevant_events_forcalc contains the events from which we potentially want to calculate a salesratio.
#relevant_events_treatment and relevant_events_inspected contain the events
# which are needed to check if the products were available for enough time.
relevant_events_treatment <- events[events$productID==treatment_product &
events[, inspected_product], 1:4]
relevant_events_inspected <- events[events$productID==inspected_product, 1:4]
relevant_events_forcalc <- relevant_events_treatment[relevant_events_treatment$begin==introduction,]
cat("relevant events selected\n")
relevant_events_forcalc$enoughdata <- NA
#Was the inspected product available long enough before and after the event?
relevant_events_forcalc$enoughdata <- apply(relevant_events_forcalc, 1, function(x) enoughdata(x['date'], x['storeID'], relevant_events_treatment, relevant_events_inspected, days_window))
cat("\nRelevant events with enough sales data found.\n")
relevant_events_forcalc <- relevant_events_forcalc[relevant_events_forcalc$enoughdata,]
cat("Number of events:")
cat(nrow(relevant_events_forcalc))
cat("\n")
relevant_events_forcalc$salesafter <- NA
relevant_events_forcalc$salesbefore <- NA
relevant_events_forcalc$salesratio <- NA
relevant_sales <- sales[productID == inspected_product,]
setkeyv(relevant_sales, c("storeID", "date"))
for(i in 1:nrow(relevant_events_forcalc)){
cat(i)
# shift function -> add zero rows to sales function (look at promotion_identification_smoothing.R)
relevant_events_forcalc$salesbefore[i] <- sum(relevant_sales[storeID == relevant_events_forcalc$storeID[i] &
date < relevant_events_forcalc$date[i] &
date >= relevant_events_forcalc$date[i]-days_window, quantity_sold_kg])
relevant_events_forcalc$salesafter[i] <- sum(relevant_sales[storeID == relevant_events_forcalc$storeID[i] &
date >= relevant_events_forcalc$date[i] &
date < relevant_events_forcalc$date[i]+days_window, quantity_sold_kg])
}
cat("\n")
relevant_events_forcalc$salesratio <- relevant_events_forcalc$salesafter/relevant_events_forcalc$salesbefore
relevant_events_forcalc <- relevant_events_forcalc[!is.na(relevant_events_forcalc$salesratio),]
return(relevant_events_forcalc)
}
did1a <-diffindiff("G01F04S12S01", "G01F01S01S01", 30, introduction = TRUE,
events = events, sales = sales)
did1b <-diffindiff("G01F04S12S01", "G01F01S01S01", 30, introduction = FALSE,
events = events, sales = sales)
did2a <-diffindiff("G19F03S02S01", "G01F01S01S01", 30, introduction = TRUE,
events = events, sales = sales)
did2b <-diffindiff("G19F03S02S01", "G01F01S01S01", 30, introduction = FALSE,
events = events, sales = sales)
did3a <-diffindiff("G19F03S02S02", "G01F01S01S01", 30, introduction = TRUE,
events = events, sales = sales)
did3b <-diffindiff("G19F03S02S02", "G01F01S01S01", 30, introduction = FALSE,
events = events, sales = sales)
plot(density(did1a$salesratio, na.rm=TRUE))
plot(density(did1b$salesratio, na.rm=TRUE))
plot(density(did2a$salesratio, na.rm=TRUE))
plot(density(did2b$salesratio, na.rm=TRUE))
plot(density(did3a$salesratio, na.rm=TRUE))
plot(density(did3b$salesratio, na.rm=TRUE))
median(did1a$salesratio, na.rm=TRUE)
median(did1b$salesratio, na.rm=TRUE)
median(did2a$salesratio, na.rm=TRUE)
median(did2b$salesratio, na.rm=TRUE)
median(did3a$salesratio, na.rm=TRUE)
median(did3b$salesratio, na.rm=TRUE)
View(did1a)
View(did1b)
enoughdata <- function(date, storeID, relevant_events_treatment, relevant_events_inspected, days_window){
date <- as.Date(date)
datebefore <- date-days_window
dateafter <- date+days_window-1
enoughdata <- TRUE
#Is the time window in the time period when we have data?
if(datebefore < as.Date("2015-01-01") || dateafter > as.Date("2016-03-15")){
enoughdata <- FALSE
}
#Is there only one event for the treatment product in the given store within the time window?
if(nrow(relevant_events_treatment[relevant_events_treatment$storeID==storeID &&
relevant_events_treatment$date > datebefore &&
relevant_events_treatment$date <= dateafter, ]) > 1){
enoughdata <- FALSE
}
#Is there any event for the inspected product in the given store within the time window?
if(nrow(relevant_events_treatment[relevant_events_inspected$storeID==storeID &&
relevant_events_inspected$date > datebefore &&
relevant_events_inspected$date <= dateafter, ]) > 0){
enoughdata <- FALSE
}
return(enoughdata)
}
did1a <-diffindiff("G01F04S12S01", "G01F01S01S01", 30, introduction = TRUE,
events = events, sales = sales)
t1 <- system.time(diffindiff("G01F04S12S01", "G01F01S01S01", 30, introduction = TRUE,
events = events, sales = sales))
did1a <-diffindiff("G01F04S12S01", "G01F01S01S01", 30, introduction = TRUE,
events = events, sales = sales)
did1b <-diffindiff("G01F04S12S01", "G01F01S01S01", 30, introduction = FALSE,
events = events, sales = sales)
did2a <-diffindiff("G19F03S02S01", "G01F01S01S01", 30, introduction = TRUE,
events = events, sales = sales)
did2b <-diffindiff("G19F03S02S01", "G01F01S01S01", 30, introduction = FALSE,
events = events, sales = sales)
did3a <-diffindiff("G19F03S02S02", "G01F01S01S01", 30, introduction = TRUE,
events = events, sales = sales)
did3b <-diffindiff("G19F03S02S02", "G01F01S01S01", 30, introduction = FALSE,
events = events, sales = sales)
plot(density(did1a$salesratio, na.rm=TRUE))
plot(density(did1b$salesratio, na.rm=TRUE))
plot(density(did2a$salesratio, na.rm=TRUE))
plot(density(did2b$salesratio, na.rm=TRUE))
plot(density(did3a$salesratio, na.rm=TRUE))
plot(density(did3b$salesratio, na.rm=TRUE))
median(did1a$salesratio, na.rm=TRUE)
median(did1b$salesratio, na.rm=TRUE)
median(did2a$salesratio, na.rm=TRUE)
median(did2b$salesratio, na.rm=TRUE)
median(did3a$salesratio, na.rm=TRUE)
median(did3b$salesratio, na.rm=TRUE)
plot(did1a$date)
hist(did1a$date)
hist(did1a$date, "weeks")
View(did1a)
hist(did1b$date, "weeks")
hist(did2a$date, "weeks")
hist(did2b$date, "weeks")
hist(did3a$date, "weeks")
hist(did3b$date, "weeks")
hist(did3b$date, "months")
calc_sales_ba <- function(edate, sID, relevant_sales, days_window){
edate <- as.Date(edate)
salesbefore <- sum(relevant_sales[storeID == sID &
date < edate &
date >= edate-days_window, quantity_sold_kg])
salesafter <- sum(relevant_sales[storeID == sID &
date >= edate &
date < edate+days_window, quantity_sold_kg])
return(list(salesbefore = salesbefore, salesafter = salesafter))
}
apply(relevant_events_forcalc, 1, function(event) calc_sales_ba(event['date'], event['storeID'], relevant_sales, days_window))
relevant_sales <- sales[productID == inspected_product,]
apply(relevant_events_forcalc, 1, function(event) calc_sales_ba(event['date'], event['storeID'], relevant_sales, days_window))
a<-apply(relevant_events_forcalc, 1, function(event) calc_sales_ba(event['date'], event['storeID'], relevant_sales, days_window))
relevant_events_forcalc$enoughdata <- apply(relevant_events_forcalc, 1, function(x) enoughdata(x['date'], x['storeID'], relevant_events_treatment, relevant_events_inspected, days_window))
relevant_events_forcalc <- relevant_events_forcalc[relevant_events_forcalc$enoughdata,]
relevant_sales <- sales[productID == inspected_product,]
setkeyv(relevant_sales, c("storeID", "date"))
a<-apply(relevant_events_forcalc, 1, function(event) calc_sales_ba(event['date'], event['storeID'], relevant_sales, days_window))
a<-apply(relevant_events_forcalc, 1, function(event) calc_sales_ba(event['date'], event['storeID'], relevant_sales, days_window))
relevant_sales <- data.frame(relevant_sales)
calc_sales_ba <- function(edate, sID, relevant_sales, days_window){
edate <- as.Date(edate)
salesbefore <- sum(relevant_sales$quantity_sold_kg[relevant_sales$storeID == sID &
relevant_sales$date < edate &
relevant_sales$date >= edate-days_window])
salesafter <- sum(relevant_sales$quantity_sold_kg[relevant_sales$storeID == sID &
relevant_sales$date >= edate &
relevant_sales$date < edate+days_window])
return(list(salesbefore = salesbefore, salesafter = salesafter))
}
a<-apply(relevant_events_forcalc, 1, function(event) calc_sales_ba(event['date'], event['storeID'], relevant_sales, days_window))
relevant_sales <- sales[productID == inspected_product,]
setkeyv(relevant_sales, c("storeID", "date"))
a <- relevant_sales[,lapply(.SD, function(event) calc_sales_ba(event['date'], event['storeID'], relevant_sales, days_window))]
edate=relevant_events_forcalc$date
edate=relevant_events_forcalc$date[1]
sID=relevant_events_forcalc$storeID[1]
relevant_sales[storeID == sID &
date < edate &
date >= edate-days_window,][,sum(quantity_sold_kg)]
calc_sales_ba <- function(edate, sID, relevant_sales, days_window){
edate <- as.Date(edate)
salesbefore <- relevant_sales[storeID == sID &
date < edate &
date >= edate-days_window,][,sum(quantity_sold_kg)]
salesafter <- relevant_sales[storeID == sID &
date >= edate &
date < edate+days_window,][,sum(quantity_sold_kg)]
return(list(salesbefore = salesbefore, salesafter = salesafter))
}
a<-apply(relevant_events_forcalc, 1, function(event) calc_sales_ba(event['date'], event['storeID'], relevant_sales, days_window))
calc_sales_b <- function(edate, sID, relevant_sales, days_window){
edate <- as.Date(edate)
salesbefore <- sum(relevant_sales[storeID == sID &
date < edate &
date >= edate-days_window, quantity_sold_kg])
return(salesbefore)
}
calc_sales_b <- function(edate, sID, relevant_sales, days_window){
edate <- as.Date(edate)
salesbefore <- sum(relevant_sales[storeID == sID &
date < edate &
date >= edate-days_window, quantity_sold_kg])
return(salesbefore)
}
a<-apply(relevant_events_forcalc, 1, function(event) calc_sales_b(event['date'], event['storeID'], relevant_sales, days_window))
system.time(apply(relevant_events_forcalc, 1, function(event) calc_sales_b(event['date'], event['storeID'], relevant_sales, days_window)))
system.time(apply(relevant_events_forcalc, 1, function(event) calc_sales_b(event['date'], event['storeID'], relevant_sales, days_window)))
system.time(apply(relevant_events_forcalc, 1, function(event) calc_sales_ba(event['date'], event['storeID'], relevant_sales, days_window)))
library(reshape2)
even <- events[,-c(1, 3, 4)]
event_table_all <- aggregate(even[,-1], by=data.frame(even$productID), sum)
