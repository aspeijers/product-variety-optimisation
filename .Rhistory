set.seed(1234)
bg100 <- barabasi.game(n=100, m=4, directed = FALSE, start.graph = graph.full(4))
set.seed(1234)
bg1000 <- barabasi.game(n=1000, m=4, directed = FALSE, start.graph = graph.full(4))
set.seed(1234)
bg10000 <- barabasi.game(n=10000, m=4, directed = FALSE, start.graph = graph.full(4))
plot(degree.distribution(bg100))
plot(degree.distribution(bg1000))
plot(degree.distribution(bg10000))
plot(degree.distribution(bg100), type="line")
line(degree.distribution(bg1000))
lines(degree.distribution(bg1000))
lines(degree.distribution(bg1000), col="red")
plot(degree.distribution(bg100), type="line", col="green")
lines(degree.distribution(bg1000), col="red")
lines(degree.distribution(bg10000), col="blue")
degree.distribution(bg100)
degree.distribution(bg100)[-1:4]
degree.distribution(bg100)[-1]
degree.distribution(bg100)[-c(1:4)]
plot(degree.distribution(bg100)[-c(1:4)], type="line", col="green")
lines(degree.distribution(bg1000)[-c(1:4)], col="red")
lines(degree.distribution(bg10000)[-c(1:4)], col="blue")
power.law.fit(bg100)
power.law.fit(degree.distribution(bg100))
power.law.fit(degree.distribution(bg100)[-c(1:4)])
power.law.fit(degree.distribution(bg1000))
power.law.fit(degree.distribution(bg10000))
power.law.fit(degree.distribution(bg100))$alpha
plot(degree.distribution(bg100, cumulative = TRUE), type="line", col="green")
lines(degree.distribution(bg1000, cumulative = TRUE), col="red")
lines(degree.distribution(bg10000, cumulative = TRUE), col="blue")
plot(degree.distribution(bg100, cumulative = TRUE)[-c(1:4)], type="line", col="green")
lines(degree.distribution(bg1000, cumulative = TRUE)[-c(1:4)], col="red")
lines(degree.distribution(bg10000, cumulative = TRUE)[-c(1:4)], col="blue")
transitivity(bg100)
cc <- NA
for(i in 4:100){
set.seed(1234)
bg <- barabasi.game(n=i, m=4, directed = FALSE, start.graph = graph.full(4))
cc[i-3] <- transitivity(bg)
}
for(i in 4:10000){
set.seed(1234)
bg <- barabasi.game(n=i, m=4, directed = FALSE, start.graph = graph.full(4))
cc[i-3] <- transitivity(bg)
}
plot(cc, type="line")
degree(bg100)
degree(bg100, 4)
d100 <- NA
d1000 <- NA
d5000 <- NA
degree(bg100, 4)
d100[34] <-2
degree(bg100, 345)
cc <- NA
d100 <- NA
d1000 <- NA
d5000 <- NA
for(i in 4:10000){
set.seed(1234)
bg <- barabasi.game(n=i, m=4, directed = FALSE, start.graph = graph.full(4))
if(i>=100){
d100[i] <- degree(bg, 100)
}
if(i>=1000){
d1000[i] <- degree(bg, 1000)
}
if(i>=5000){
d5000[i] <- degree(bg, 5000)
}
cc[i-3] <- transitivity(bg)
}
plot(cc, type="line")
```
plot(d100, type="line", col="green")
lines(d1000, col="red")
lines(d5000, col="blue")
library(igraph)
er1 <- erdos.renyi.game(20, 0.4, "gnp")
er2 <- erdos.renyi.game(20, 0.4, "gnp")
summary(er1)
eru <- er1 %u% er2
summary(eru)
eru <- union(er1, er2, byname = FALSE)
summary(eru)
eru <- union(er1, er2, byname = TRUE)
eru <- graph.disjoint.union(er1, er2,)
eru <- graph.disjoint.union(er1, er2)
summary(eru)
summary(er1)
summary(er2)
library(igraph)
er1 <- erdos.renyi.game(20, 0.4, "gnp")
er2 <- erdos.renyi.game(20, 0.4, "gnp")
er1[[1]]
er1[[2]]
er1[[3]]
vcount(eru)
vcount(er2)
eru <- graph.disjoint.union(er1, er2)
summary(eru)
plot(eru)
eru <- rewire(each_edge(p = 15/vcount(eru)))
eru <- rewire(each_edge(p = 15/vcount(eru), loops = FALSE))
eru <- rewire(eru, each_edge(p = 15/vcount(eru)))
plot(eru)
each_edge(p = 15/vcount(eru))
15/vcount(eru)
---
setwd("/media/balint/Storage/Tanulas/thesis/product-variety-optimisation")
event_table_60d <- readRDS("./toKernel2/KernelResults/event_table_60d.RData")
event_table_90d <- readRDS("./toKernel2/KernelResults/event_table_90d.RData")
products <- readRDS("products.RData")
#some variables are list, lets turn these into normal data frames
for(i in 15:20){
event_table_60d[,i] <- unlist(event_table_60d[,i])
event_table_90d[,i] <- unlist(event_table_90d[,i])
}
#removing obsrvation which are based on less than 10 events
event_table_60d[event_table_60d$number_of_intros60<10, 15:17] <- NA
event_table_60d[event_table_60d$number_of_outs60<10, 18:20] <- NA
event_table_90d[event_table_90d$number_of_intros90<10, 15:17] <- NA
event_table_90d[event_table_90d$number_of_outs90<10, 18:20] <- NA
#remove rows with NAs
event_table_60d <- na.omit(event_table_60d)
event_table_90d <- na.omit(event_table_90d)
#choosing substitutes
event_table_60d$substitute <- event_table_60d$sr_median_intro<1 &
event_table_60d$sr_median_out>1 &
event_table_60d$sr_smaller_than_1_intro>0.5 &
event_table_60d$sr_bigger_than_1_out>0.5
sum(event_table_60d$substitute)
event_table_90d$substitute <- event_table_90d$sr_median_intro<1 &
event_table_90d$sr_median_out>1 &
event_table_90d$sr_smaller_than_1_intro>0.5 &
event_table_90d$sr_bigger_than_1_out>0.5
sum(event_table_90d$substitute)
event_table_60d <- readRDS("./toKernel2/KernelResults/event_table_60d.RData")
event_table_90d <- readRDS("./toKernel2/KernelResults/event_table_90d.RData")
products <- readRDS("products.RData")
#some variables are list, lets turn these into normal data frames
for(i in 15:20){
event_table_60d[,i] <- unlist(event_table_60d[,i])
event_table_90d[,i] <- unlist(event_table_90d[,i])
}
#removing obsrvation which are based on less than 10 events
event_table_60d[event_table_60d$number_of_intros60<10, 15:17] <- NA
event_table_60d[event_table_60d$number_of_outs60<10, 18:20] <- NA
event_table_90d[event_table_90d$number_of_intros90<10, 15:17] <- NA
event_table_90d[event_table_90d$number_of_outs90<10, 18:20] <- NA
event_table_60d$substitute <- event_table_60d$sr_median_intro<1 &
event_table_60d$sr_median_out>1 &
event_table_60d$sr_smaller_than_1_intro>0.5 &
event_table_60d$sr_bigger_than_1_out>0.5
event_table_90d$substitute <- event_table_90d$sr_median_intro<1 &
event_table_90d$sr_median_out>1 &
event_table_90d$sr_smaller_than_1_intro>0.5 &
event_table_90d$sr_bigger_than_1_out>0.5
event_table_60d$substitute90 <- event_table_90d$substitute
event_table_60d <- na.omit(event_table_60d)
event_table_90d <- na.omit(event_table_90d)
event_table_60d$substitute_both <- event_table_60d$substitute & event_table_60d$substitute90
sum(event_table_60d$substitute_both)
event_table_60d <- merge(event_table_60d, products, by.x="treatment_productID", by.y="productID")
event_table_60d <- merge(event_table_60d, products, by.x="inspected_productID", by.y="productID")
event_table_90d <- merge(event_table_90d, products, by.x="treatment_productID", by.y="productID")
event_table_90d <- merge(event_table_90d, products, by.x="inspected_productID", by.y="productID")
#Are the treatment and inspected products in the same group/family/subfamily/flavor/type?
event_table_60d$same_grup <- event_table_60d$grup.x == event_table_60d$grup.y
event_table_60d$same_fam <- event_table_60d$fam.x == event_table_60d$fam.y
event_table_60d$same_subFam <- event_table_60d$subFam.x == event_table_60d$subFam.y
event_table_60d$same_flavor <- event_table_60d$flavor.x == event_table_60d$flavor.y
event_table_60d$same_type <- event_table_60d$type.x == event_table_60d$type.y
event_table_90d$same_grup <- event_table_90d$grup.x == event_table_90d$grup.y
event_table_90d$same_fam <- event_table_90d$fam.x == event_table_90d$fam.y
event_table_90d$same_subFam <- event_table_90d$subFam.x == event_table_90d$subFam.y
event_table_90d$same_flavor <- event_table_90d$flavor.x == event_table_90d$flavor.y
event_table_90d$same_type <- event_table_90d$type.x == event_table_90d$type.y
sum(event_table_60d$same_grup)/nrow(event_table_60d)
sum(event_table_60d$same_grup[event_table_60d$substitute])/sum(event_table_60d$substitute)
sum(event_table_60d$same_grup[event_table_60d$substitute_both])/sum(event_table_60d$substitute_both)
sum(event_table_90d$same_grup)/nrow(event_table_90d)
sum(event_table_90d$same_grup[event_table_90d$substitute])/sum(event_table_90d$substitute)
sum(event_table_60d$same_fam)/nrow(event_table_60d)
sum(event_table_60d$same_fam[event_table_60d$substitute])/sum(event_table_60d$substitute)
sum(event_table_60d$same_fam[event_table_60d$substitute_both])/sum(event_table_60d$substitute_both)
sum(event_table_90d$same_fam)/nrow(event_table_90d)
sum(event_table_90d$same_fam[event_table_90d$substitute])/sum(event_table_90d$substitute)
sum(event_table_60d$same_subFam)/nrow(event_table_60d)
sum(event_table_60d$same_subFam[event_table_60d$substitute])/sum(event_table_60d$substitute)
sum(event_table_60d$same_subFam[event_table_60d$substitute_both])/sum(event_table_60d$substitute_both)
sum(event_table_90d$same_subFam)/nrow(event_table_90d)
sum(event_table_90d$same_subFam[event_table_90d$substitute])/sum(event_table_90d$substitute)
sum(event_table_60d$same_flavor)/nrow(event_table_60d)
sum(event_table_60d$same_flavor[event_table_60d$substitute])/sum(event_table_60d$substitute)
sum(event_table_60d$same_flavor[event_table_60d$substitute_both])/sum(event_table_60d$substitute_both)
sum(event_table_90d$same_flavor)/nrow(event_table_90d)
sum(event_table_90d$same_flavor[event_table_90d$substitute])/sum(event_table_90d$substitute)
sum(event_table_60d$same_type)/nrow(event_table_60d)
sum(event_table_60d$same_type[event_table_60d$substitute])/sum(event_table_60d$substitute)
sum(event_table_60d$same_type[event_table_60d$substitute_both])/sum(event_table_60d$substitute_both)
sum(event_table_90d$same_type)/nrow(event_table_90d)
sum(event_table_90d$same_type[event_table_90d$substitute])/sum(event_table_90d$substitute)
sum(event_table_60d$substitute_both)
?merge
event_table_60d <- merge(event_table_60d, event_table_60d,
by.x = c("treatment_productID", "inspected_productID"),
by.y = c("inspected_productID", "treatment_productID"))
View(event_table_60d)
event_table_60d <- merge(event_table_60d, event_table_60d,
by.x = c("treatment_productID", "inspected_productID"),
by.y = c("inspected_productID", "treatment_productID"),
all.x=TRUE)
setwd("/media/balint/Storage/Tanulas/thesis/product-variety-optimisation")
event_table_60d <- readRDS("./toKernel2/KernelResults/event_table_60d.RData")
event_table_90d <- readRDS("./toKernel2/KernelResults/event_table_90d.RData")
products <- readRDS("products.RData")
#some variables are list, lets turn these into normal data frames
for(i in 15:20){
event_table_60d[,i] <- unlist(event_table_60d[,i])
event_table_90d[,i] <- unlist(event_table_90d[,i])
}
#removing obsrvation which are based on less than 10 events
event_table_60d[event_table_60d$number_of_intros60<10, 15:17] <- NA
event_table_60d[event_table_60d$number_of_outs60<10, 18:20] <- NA
event_table_90d[event_table_90d$number_of_intros90<10, 15:17] <- NA
event_table_90d[event_table_90d$number_of_outs90<10, 18:20] <- NA
#choosing substitutes
event_table_60d$substitute <- event_table_60d$sr_median_intro<1 &
event_table_60d$sr_median_out>1 &
event_table_60d$sr_smaller_than_1_intro>0.5 &
event_table_60d$sr_bigger_than_1_out>0.5
event_table_90d$substitute <- event_table_90d$sr_median_intro<1 &
event_table_90d$sr_median_out>1 &
event_table_90d$sr_smaller_than_1_intro>0.5 &
event_table_90d$sr_bigger_than_1_out>0.5
event_table_60d$substitute90 <- event_table_90d$substitute
event_table_60d$substitute_both <- event_table_60d$substitute & event_table_60d$substitute90
#remove rows with NAs
event_table_60d <- na.omit(event_table_60d)
event_table_90d <- na.omit(event_table_90d)
event_table_60d <- merge(event_table_60d, event_table_60d,
by.x = c("treatment_productID", "inspected_productID"),
by.y = c("inspected_productID", "treatment_productID"),
all.x=TRUE)
View(event_table_60d)
names(event_table_60d)
setwd("/media/balint/Storage/Tanulas/thesis/product-variety-optimisation")
event_table_60d <- readRDS("./toKernel2/KernelResults/event_table_60d.RData")
event_table_90d <- readRDS("./toKernel2/KernelResults/event_table_90d.RData")
products <- readRDS("products.RData")
#some variables are list, lets turn these into normal data frames
for(i in 15:20){
event_table_60d[,i] <- unlist(event_table_60d[,i])
event_table_90d[,i] <- unlist(event_table_90d[,i])
}
#removing obsrvation which are based on less than 10 events
event_table_60d[event_table_60d$number_of_intros60<10, 15:17] <- NA
event_table_60d[event_table_60d$number_of_outs60<10, 18:20] <- NA
event_table_90d[event_table_90d$number_of_intros90<10, 15:17] <- NA
event_table_90d[event_table_90d$number_of_outs90<10, 18:20] <- NA
#choosing substitutes
event_table_60d$substitute <- event_table_60d$sr_median_intro<1 &
event_table_60d$sr_median_out>1 &
event_table_60d$sr_smaller_than_1_intro>0.5 &
event_table_60d$sr_bigger_than_1_out>0.5
event_table_90d$substitute <- event_table_90d$sr_median_intro<1 &
event_table_90d$sr_median_out>1 &
event_table_90d$sr_smaller_than_1_intro>0.5 &
event_table_90d$sr_bigger_than_1_out>0.5
event_table_60d$substitute90 <- event_table_90d$substitute
event_table_60d$substitute_both <- event_table_60d$substitute & event_table_60d$substitute90
#remove rows with NAs
event_table_60d <- na.omit(event_table_60d)
event_table_90d <- na.omit(event_table_90d)
# sum(event_table_60d$substitute)
# sum(event_table_90d$substitute)
# sum(event_table_60d$substitute_both)
#joining with the opposite pairs
#(the treatment product is the inspected and the inspected is the treatment)
event_table_60d <- merge(event_table_60d, event_table_60d[,c(1, 2, 21)],
by.x = c("treatment_productID", "inspected_productID"),
by.y = c("inspected_productID", "treatment_productID"),
all.x=TRUE)
event_table_60d$substitute_double <- event_table_60d$substitute.x & event_table_60d$substitute.y
setwd("/media/balint/Storage/Tanulas/thesis/product-variety-optimisation")
event_table_60d <- readRDS("./toKernel2/KernelResults/event_table_60d.RData")
event_table_90d <- readRDS("./toKernel2/KernelResults/event_table_90d.RData")
products <- readRDS("products.RData")
#some variables are list, lets turn these into normal data frames
for(i in 15:20){
event_table_60d[,i] <- unlist(event_table_60d[,i])
event_table_90d[,i] <- unlist(event_table_90d[,i])
}
#removing obsrvation which are based on less than 10 events
event_table_60d[event_table_60d$number_of_intros60<10, 15:17] <- NA
event_table_60d[event_table_60d$number_of_outs60<10, 18:20] <- NA
event_table_90d[event_table_90d$number_of_intros90<10, 15:17] <- NA
event_table_90d[event_table_90d$number_of_outs90<10, 18:20] <- NA
#choosing substitutes
event_table_60d$substitute <- event_table_60d$sr_median_intro<1 &
event_table_60d$sr_median_out>1 &
event_table_60d$sr_smaller_than_1_intro>0.5 &
event_table_60d$sr_bigger_than_1_out>0.5
event_table_90d$substitute <- event_table_90d$sr_median_intro<1 &
event_table_90d$sr_median_out>1 &
event_table_90d$sr_smaller_than_1_intro>0.5 &
event_table_90d$sr_bigger_than_1_out>0.5
event_table_60d$substitute90 <- event_table_90d$substitute
event_table_60d$substitute_both <- event_table_60d$substitute & event_table_60d$substitute90
#joining with the opposite pairs
#(the treatment product is the inspected and the inspected is the treatment)
event_table_60d <- merge(event_table_60d, event_table_60d[,c(1, 2, 21)],
by.x = c("treatment_productID", "inspected_productID"),
by.y = c("inspected_productID", "treatment_productID"),
all.x=TRUE)
event_table_90d <- merge(event_table_90d, event_table_90d[,c(1, 2, 21)],
by.x = c("treatment_productID", "inspected_productID"),
by.y = c("inspected_productID", "treatment_productID"),
all.x=TRUE)
event_table_60d$substitute_double <- event_table_60d$substitute.x & event_table_60d$substitute.y
event_table_60d$substitute_double_both <- event_table_60d$substitute.x & event_table_60d$substitute.y
setwd("/media/balint/Storage/Tanulas/thesis/product-variety-optimisation")
event_table_60d <- readRDS("./toKernel2/KernelResults/event_table_60d.RData")
event_table_90d <- readRDS("./toKernel2/KernelResults/event_table_90d.RData")
products <- readRDS("products.RData")
#some variables are list, lets turn these into normal data frames
for(i in 15:20){
event_table_60d[,i] <- unlist(event_table_60d[,i])
event_table_90d[,i] <- unlist(event_table_90d[,i])
}
#removing obsrvation which are based on less than 10 events
event_table_60d[event_table_60d$number_of_intros60<10, 15:17] <- NA
event_table_60d[event_table_60d$number_of_outs60<10, 18:20] <- NA
event_table_90d[event_table_90d$number_of_intros90<10, 15:17] <- NA
event_table_90d[event_table_90d$number_of_outs90<10, 18:20] <- NA
#choosing substitutes
event_table_60d$substitute <- event_table_60d$sr_median_intro<1 &
event_table_60d$sr_median_out>1 &
event_table_60d$sr_smaller_than_1_intro>0.5 &
event_table_60d$sr_bigger_than_1_out>0.5
event_table_90d$substitute <- event_table_90d$sr_median_intro<1 &
event_table_90d$sr_median_out>1 &
event_table_90d$sr_smaller_than_1_intro>0.5 &
event_table_90d$sr_bigger_than_1_out>0.5
event_table_60d$substitute90 <- event_table_90d$substitute
event_table_60d$substitute_both <- event_table_60d$substitute & event_table_60d$substitute90
#joining with the opposite pairs
#(the treatment product is the inspected and the inspected is the treatment)
event_table_60d <- merge(event_table_60d, event_table_60d[,c(1, 2, 21)],
by.x = c("treatment_productID", "inspected_productID"),
by.y = c("inspected_productID", "treatment_productID"),
all.x=TRUE)
event_table_90d <- merge(event_table_90d, event_table_90d[,c(1, 2, 21)],
by.x = c("treatment_productID", "inspected_productID"),
by.y = c("inspected_productID", "treatment_productID"),
all.x=TRUE)
event_table_60d$substitute_double <- event_table_60d$substitute.x & event_table_60d$substitute.y
event_table_90d$substitute_double <- event_table_90d$substitute.x & event_table_90d$substitute.y
event_table_60d$substitute90_double <- event_table_90d$substitute_double
event_table_60d$substitute_double_both <- event_table_60d$substitute_double & event_table_60d$substitute90_double
event_table_60d <- na.omit(event_table_60d)
event_table_90d <- na.omit(event_table_90d)
sum(event_table_60d$substitute)
sum(event_table_90d$substitute)
sum(event_table_60d$substitute_both)
sum(event_table_60d$substitute_double)
sum(event_table_90d$substitute_double)
sum(event_table_60d$substitute_double_both)
setwd("/media/balint/Storage/Tanulas/thesis/product-variety-optimisation")
event_table_60d <- readRDS("./toKernel2/KernelResults/event_table_60d.RData")
event_table_90d <- readRDS("./toKernel2/KernelResults/event_table_90d.RData")
products <- readRDS("products.RData")
#some variables are list, lets turn these into normal data frames
for(i in 15:20){
event_table_60d[,i] <- unlist(event_table_60d[,i])
event_table_90d[,i] <- unlist(event_table_90d[,i])
}
#removing obsrvation which are based on less than 10 events
event_table_60d[event_table_60d$number_of_intros60<10, 15:17] <- NA
event_table_60d[event_table_60d$number_of_outs60<10, 18:20] <- NA
event_table_90d[event_table_90d$number_of_intros90<10, 15:17] <- NA
event_table_90d[event_table_90d$number_of_outs90<10, 18:20] <- NA
#choosing substitutes
event_table_60d$substitute <- event_table_60d$sr_median_intro<1 &
event_table_60d$sr_median_out>1 &
event_table_60d$sr_smaller_than_1_intro>0.5 &
event_table_60d$sr_bigger_than_1_out>0.5
event_table_90d$substitute <- event_table_90d$sr_median_intro<1 &
event_table_90d$sr_median_out>1 &
event_table_90d$sr_smaller_than_1_intro>0.5 &
event_table_90d$sr_bigger_than_1_out>0.5
event_table_60d$substitute90 <- event_table_90d$substitute
event_table_60d$substitute_both <- event_table_60d$substitute & event_table_60d$substitute90
#joining with the opposite pairs
#(the treatment product is the inspected and the inspected is the treatment)
event_table_60d <- merge(event_table_60d, event_table_60d[,c(1, 2, 21)],
by.x = c("treatment_productID", "inspected_productID"),
by.y = c("inspected_productID", "treatment_productID"),
all.x=TRUE)
event_table_90d <- merge(event_table_90d, event_table_90d[,c(1, 2, 21)],
by.x = c("treatment_productID", "inspected_productID"),
by.y = c("inspected_productID", "treatment_productID"),
all.x=TRUE)
event_table_60d$substitute_double <- event_table_60d$substitute.x & event_table_60d$substitute.y
event_table_90d$substitute_double <- event_table_90d$substitute.x & event_table_90d$substitute.y
event_table_60d$substitute90_double <- event_table_90d$substitute_double
event_table_60d$substitute_double_both <- event_table_60d$substitute_double & event_table_60d$substitute90_double
event_table_60d <- na.omit(event_table_60d)
event_table_90d <- na.omit(event_table_90d)
sum(event_table_60d$substitute.x)
sum(event_table_90d$substitute.x)
sum(event_table_60d$substitute_both)
sum(event_table_60d$substitute_double)
sum(event_table_90d$substitute_double)
sum(event_table_60d$substitute_double_both)
event_table_60d <- merge(event_table_60d, products, by.x="treatment_productID", by.y="productID")
event_table_60d <- merge(event_table_60d, products, by.x="inspected_productID", by.y="productID")
event_table_90d <- merge(event_table_90d, products, by.x="treatment_productID", by.y="productID")
event_table_90d <- merge(event_table_90d, products, by.x="inspected_productID", by.y="productID")
event_table_60d$same_grup <- event_table_60d$grup.x == event_table_60d$grup.y
event_table_60d$same_fam <- event_table_60d$fam.x == event_table_60d$fam.y
event_table_60d$same_subFam <- event_table_60d$subFam.x == event_table_60d$subFam.y
event_table_60d$same_flavor <- event_table_60d$flavor.x == event_table_60d$flavor.y
event_table_60d$same_type <- event_table_60d$type.x == event_table_60d$type.y
event_table_90d$same_grup <- event_table_90d$grup.x == event_table_90d$grup.y
event_table_90d$same_fam <- event_table_90d$fam.x == event_table_90d$fam.y
event_table_90d$same_subFam <- event_table_90d$subFam.x == event_table_90d$subFam.y
event_table_90d$same_flavor <- event_table_90d$flavor.x == event_table_90d$flavor.y
event_table_90d$same_type <- event_table_90d$type.x == event_table_90d$type.y
sum(event_table_60d$same_grup)/nrow(event_table_60d)
sum(event_table_60d$same_grup[event_table_60d$substitute.x])/sum(event_table_60d$substitute.x)
sum(event_table_60d$same_grup[event_table_60d$substitute_both])/sum(event_table_60d$substitute_both)
sum(event_table_90d$same_grup)/nrow(event_table_90d)
sum(event_table_90d$same_grup[event_table_90d$substitute.x])/sum(event_table_90d$substitute.x)
sum(event_table_90d$same_grup[event_table_90d$substitute_double])/sum(event_table_90d$substitute_double)
sum(event_table_60d$same_fam)/nrow(event_table_60d)
sum(event_table_60d$same_fam[event_table_60d$substitute.x])/sum(event_table_60d$substitute.x)
sum(event_table_60d$same_fam[event_table_60d$substitute_both])/sum(event_table_60d$substitute_both)
sum(event_table_90d$same_fam)/nrow(event_table_90d)
sum(event_table_90d$same_fam[event_table_90d$substitute.x])/sum(event_table_90d$substitute.x)
sum(event_table_90d$same_fam[event_table_90d$substitute_double])/sum(event_table_90d$substitute_double)
sum(event_table_60d$same_subFam)/nrow(event_table_60d)
sum(event_table_60d$same_subFam[event_table_60d$substitute.x])/sum(event_table_60d$substitute.x)
sum(event_table_60d$same_subFam[event_table_60d$substitute_both])/sum(event_table_60d$substitute_both)
sum(event_table_90d$same_subFam)/nrow(event_table_90d)
sum(event_table_90d$same_subFam[event_table_90d$substitute.x])/sum(event_table_90d$substitute.x)
sum(event_table_90d$same_subFam[event_table_90d$substitute_double])/sum(event_table_90d$substitute_double)
sum(event_table_60d$same_flavor)/nrow(event_table_60d)
sum(event_table_60d$same_flavor[event_table_60d$substitute.x])/sum(event_table_60d$substitute.x)
sum(event_table_60d$same_flavor[event_table_60d$substitute_both])/sum(event_table_60d$substitute_both)
sum(event_table_90d$same_flavor)/nrow(event_table_90d)
sum(event_table_90d$same_flavor[event_table_90d$substitute.x])/sum(event_table_90d$substitute.x)
sum(event_table_90d$same_flavor[event_table_90d$substitute_double])/sum(event_table_90d$substitute_double)
sum(event_table_60d$same_type)/nrow(event_table_60d)
sum(event_table_60d$same_type[event_table_60d$substitute.x])/sum(event_table_60d$substitute.x)
sum(event_table_60d$same_type[event_table_60d$substitute_both])/sum(event_table_60d$substitute_both)
sum(event_table_90d$same_type)/nrow(event_table_90d)
sum(event_table_90d$same_type[event_table_90d$substitute.x])/sum(event_table_90d$substitute.x)
sum(event_table_90d$same_type[event_table_90d$substitute_double])/sum(event_table_90d$substitute_double)
library(igraph)
subtitutes <- event_table_60d[event_table_60d$substitute_both, 1:2]
substitutes <- event_table_60d[event_table_60d$substitute_both, 1:2]
View(substitutes)
s <- graph.data.frame(substitutes)
plot(s)
?plot
tkplot(s)
View(event_table_60d)
sum(event_table_60d$same_grup)/nrow(event_table_60d)
sum(event_table_60d$same_grup[event_table_60d$substitute.x])/sum(event_table_60d$substitute.x)
sum(event_table_60d$same_grup[event_table_60d$substitute_both])/sum(event_table_60d$substitute_both)
sum(event_table_90d$same_grup)/nrow(event_table_90d)
sum(event_table_90d$same_grup[event_table_90d$substitute.x])/sum(event_table_90d$substitute.x)
sum(event_table_90d$same_grup[event_table_90d$substitute_double])/sum(event_table_90d$substitute_double)
sum(event_table_60d$same_fam)/nrow(event_table_60d)
sum(event_table_60d$same_fam[event_table_60d$substitute.x])/sum(event_table_60d$substitute.x)
sum(event_table_60d$same_fam[event_table_60d$substitute_both])/sum(event_table_60d$substitute_both)
sum(event_table_90d$same_fam)/nrow(event_table_90d)
sum(event_table_90d$same_fam[event_table_90d$substitute.x])/sum(event_table_90d$substitute.x)
sum(event_table_90d$same_fam[event_table_90d$substitute_double])/sum(event_table_90d$substitute_double)
sum(event_table_60d$same_subFam)/nrow(event_table_60d)
sum(event_table_60d$same_subFam[event_table_60d$substitute.x])/sum(event_table_60d$substitute.x)
sum(event_table_60d$same_subFam[event_table_60d$substitute_both])/sum(event_table_60d$substitute_both)
sum(event_table_90d$same_subFam)/nrow(event_table_90d)
sum(event_table_90d$same_subFam[event_table_90d$substitute.x])/sum(event_table_90d$substitute.x)
sum(event_table_90d$same_subFam[event_table_90d$substitute_double])/sum(event_table_90d$substitute_double)
sum(event_table_60d$same_flavor)/nrow(event_table_60d)
sum(event_table_60d$same_flavor[event_table_60d$substitute.x])/sum(event_table_60d$substitute.x)
sum(event_table_60d$same_flavor[event_table_60d$substitute_both])/sum(event_table_60d$substitute_both)
sum(event_table_90d$same_flavor)/nrow(event_table_90d)
sum(event_table_90d$same_flavor[event_table_90d$substitute.x])/sum(event_table_90d$substitute.x)
sum(event_table_90d$same_flavor[event_table_90d$substitute_double])/sum(event_table_90d$substitute_double)
sum(event_table_60d$same_type)/nrow(event_table_60d)
sum(event_table_60d$same_type[event_table_60d$substitute.x])/sum(event_table_60d$substitute.x)
sum(event_table_60d$same_type[event_table_60d$substitute_both])/sum(event_table_60d$substitute_both)
sum(event_table_90d$same_type)/nrow(event_table_90d)
sum(event_table_90d$same_type[event_table_90d$substitute.x])/sum(event_table_90d$substitute.x)
library(igraph)
substitutes <- event_table_60d[event_table_60d$substitute_both, 1:2]
s <- graph.data.frame(substitutes)
tkplot(s)
sum(event_table_60d$substitute.x)
sum(event_table_90d$substitute.x)
sum(event_table_60d$substitute_both)
sum(event_table_60d$substitute_double)
sum(event_table_90d$substitute_double)
sum(event_table_60d$substitute_double_both)
sum(event_table_60d$substitute_both)
291/10282
